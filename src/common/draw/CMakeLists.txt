option(GOOPAX_DEBUG "GOOPAX_DEBUG" OFF)

if (NOT TARGET goopax::goopax)
  find_package(goopax REQUIRED PATHS ../../../..)
endif()
if (NOT TARGET Eigen3::Eigen)
  find_package(Eigen3 3.3 NO_MODULE PATHS "${CMAKE_BINARY_DIR}/ext/eigen")
endif()
if (NOT OpenGL_FOUND)
  find_package(OpenGL)
endif()
find_package(SDL3 PATHS "${CMAKE_BINARY_DIR}/ext/sdl3")

if (TARGET SDL3::SDL3 AND TARGET Eigen3::Eigen)

  if (TARGET OpenGL::GL AND NOT GOOPAX_DEBUG)
    option(GOOPAX_DRAW_WITH_OPENGL "with OpenGL support" ON)
  else()
    option(GOOPAX_DRAW_WITH_OPENGL "with OpenGL support" OFF)
  endif()

  if (APPLE AND NOT GOOPAX_DEBUG)
    option(GOOPAX_DRAW_WITH_METAL "with Metal support" ON)
  else()
    option(GOOPAX_DRAW_WITH_METAL "with Metal support" OFF)
  endif()

  message("OpenGL: ${GOOPAX_DRAW_WITH_OPENGL}")
  message("Metal: ${GOOPAX_DRAW_WITH_METAL}")
  if (GOOPAX_DRAW_WITH_OPENGL OR GOOPAX_DRAW_WITH_METAL AND GOOPAX_DEBUG)
    message(FATAL_ERROR "GOOPAX_DEBUG is not supported with OpenGL or Metal enabled.")
  endif()

  set (FILES window_sdl.cpp window_sdl.h window_plain.h window_plain.cpp)
  if (GOOPAX_DRAW_WITH_METAL)
    set (FILES ${FILES} window_metal.h window_metal.mm)
  endif()
  if (GOOPAX_DRAW_WITH_OPENGL)
    set(FILES ${FILES} window_gl.h window_gl.cpp)
  endif()

  add_library(goopax_draw ${FILES})

  if (GOOPAX_DRAW_WITH_OPENGL)
    target_compile_definitions(goopax_draw PUBLIC -DWITH_OPENGL=1)
    target_link_libraries(goopax_draw PRIVATE OpenGL::GL)
  else()
    target_compile_definitions(goopax_draw PUBLIC -DWITH_OPENGL=0)
  endif()
  if (GOOPAX_DRAW_WITH_METAL)
    target_compile_definitions(goopax_draw PUBLIC -DWITH_METAL=1)
  else()
    target_compile_definitions(goopax_draw PUBLIC -DWITH_METAL=0)
  endif()
  if (GOOPAX_DEBUG)
    target_compile_definitions(goopax_draw PRIVATE -DGOOPAX_DEBUG=1)
  else()
    target_compile_definitions(goopax_draw PRIVATE -DGOOPAX_DEBUG=0)
  endif()

  target_link_libraries(goopax_draw PUBLIC SDL3::SDL3 goopax::goopax Eigen3::Eigen)
  if (NOT APPLE)
    if (NOT WIN32 AND NOT ANDROID)
      target_link_libraries(goopax_draw PUBLIC -lX11)
    endif()
    if (NOT ANDROID)
      target_link_libraries(goopax_draw PUBLIC OpenGL::GLU)
    endif()
  endif()

endif()
