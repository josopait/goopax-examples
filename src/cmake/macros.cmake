macro(make_persistent A)
foreach(argument ${A})
  string(FIND "${argument}" ":" typepos)
  string(FIND "${argument}" "=" valuepos)
  if (typepos GREATER_EQUAL 1 AND valuepos GREATER_EQUAL 1)
  math(EXPR typepos "${typepos}-2")
  string(SUBSTRING "${argument}" 2 "${typepos}" argname)
  math(EXPR typepos "${typepos}+3")
  math(EXPR valueoffset "${valuepos}-${typepos}")
  string(SUBSTRING "${argument}" "${typepos}" "${valueoffset}" argtype)
  math(EXPR valuepos "${valuepos}+1")
  string(SUBSTRING "${argument}" "${valuepos}" -1 argvalue)
  set("${argname}" "${argvalue}" CACHE "${argtype}" "")
  message("${argname} is ${argvalue} of type ${argtype}")
  endif()
endforeach()
endmacro()

macro(warn_missing)
  set(missing "")
  foreach(L ${ARGN})
    if (NOT TARGET ${L})
      list(APPEND missing "${L}")
    endif()
  endforeach()
endmacro()

macro(add_withfile P FN)
  warn_missing(${ARGN})
  if ("${missing}" STREQUAL "")
    message("building target ${P}")
    add_executable(${P} ${FN})
    install(TARGETS ${P} DESTINATION bin)
    foreach(L ${ARGN})
      target_link_libraries(${P} ${L})
    endforeach()
    target_link_libraries(${P} goopax::goopax)
    if (TARGET TBB::tbb)
      target_link_libraries(${P} TBB::tbb)
    endif()
    if (IOS)
      set_apple_properties(${P})
    endif()
  else()
    message("not building target ${P} [missing: ${missing}]")
  endif()
endmacro()

macro(add P)
  add_withfile(${P} ${P}.cpp ${ARGN})
endmacro()

macro(add_android_so_withfile P FN)
  warn_missing(${ARGN})
  if ("${missing}" STREQUAL "")
    message("building target ${P} executable shared object")
    add_library(${P} SHARED ${FN})
    install(TARGETS ${P} DESTINATION bin)
    foreach(L ${ARGN})
      target_link_libraries(${P} ${L})
    endforeach()
    target_link_libraries(${P} goopax::goopax)
  else()
    message("not building target ${P} executable shared object [missing: ${missing}]")
  endif()
endmacro()

macro(add_android_so P)
  add_android_so_withfile(${P} ${P}.cpp ${ARGN})
endmacro()

macro(add_sdl_main)
  if (NOT ANDROID)
    add(${ARGN})
  else()
    add_android_so(${ARGN})
  endif()
endmacro()
